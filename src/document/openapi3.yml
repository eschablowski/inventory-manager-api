---
tags:
  - name: Document
    description: Documents stored in the inventory manager.
paths:
  /document/list:
    get:
      tags:
        - Document
        - Search
      summary: Lists all documents.
      description: Returns a list of all documents that can be accessed by the client pertaining to an optional query.
      operationId: searchDocuments
      security:
        - apiKey:
            - read:documents
        - oAuth:
            - read:documents
      parameters:
        - in: query
          name: search
          description: Search Query to be conducted
          required: true
          schema:
            type: string
            example: hello world
        - in: query
          name: first
          description: The number of nodes to return from the cursor or start of the result
          required: false
          schema:
            type: integer
            minimum: 0
            example: 10
        - in: query
          name: after
          description: The cursor to the node before the first one to be returned
          required: false
          schema:
            type: string
            example: 00000000-0000-0000-0000-000000000000
        - in: query
          name: last
          description: The number of nodes to return from the cursor or start of the result
          required: false
          schema:
            type: integer
            minimum: 0
            example: 0
        - in: query
          name: after
          description: The cursor to the node after the last one to be returned
          required: false
          schema:
            type: string
            example: 11110000-0000-0000-0000-000000000000
      responses:
        401:
          description: Invalid authentication.
        405:
          description: Invalid search
        200:
          $ref: "#/components/responses/Documents"
  /document/{id}:
    get:
      tags:
        - Document
      summary: Gets a document.
      description: Returns a Document by its id.
      operationId: getDocumentById
      parameters:
        - in: path
          name: id
          description: The unique identifier for this document.
          required: true
          schema:
            type: string
            example: 00000000-0000-0000-0000-000000000000
      responses:
        200:
          $ref: "#/components/responses/Document"
    delete:
      tags:
        - Document
      summary: Deletes a document.
      description: Deletes a given document by its id as well as deleting all references to this object.
      operationId: deleteDocumentById
      parameters:
        - in: path
          name: id
          description: The unique identifier for this document.
          required: true
          schema:
            type: string
            example: 00000000-0000-0000-0000-000000000000
      responses:
        200:
          description: The document was successfully Deleted.

components:
  responses:
    Document:
      description: The requested Document.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Document"
    Documents:
      description: The requested Documents.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Documents"
  schemas:
    Documents:
      title: Documents
      type: array
      items:
        $ref: "#/components/schemas/Document"
    Document: !import-schema
      loc: Document
      file: ./schema.output.json
